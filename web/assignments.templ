package web

import (
    "fmt"

	"cso/codecowboy/classroom"
)

templ (w *Web) assignmentList(course *classroom.Course) {
    <div id="assignmentList">

        <ul style="list-style: none">
            <li>
                <button id="run-all-btn" style="padding: 5px;" hx-post={ fmt.Sprintf("/courses/"+course.Name+"/assignments/runAll") } hx-trigger="click" hx-target="#run-all-status" hx-swap="outerHTML">Run All Assignments</button>
                <span id="run-all-status"></span>
                <script>
                    document.getElementById('run-all-btn').addEventListener('click', function() {
                        document.getElementById('run-all-status').innerHTML = 'Running...';
                    });
                </script>
            </li>
            for _, a := range course.Assignments {
                <li>
                    <button style="padding: 5px" hx-post={ fmt.Sprintf("/courses/"+course.Name+"/assignments/"+a.Name+"/run") }>Run</button>
                    <a href={ templ.URL("/courses/"+course.Name+"/assignments/"+a.Name) }>{a.Name}</a>
                </li>

            }
        </ul>

        if len(course.Assignments) == 0 {
            <p>No assignments found.</p>
        }

        <p><a
            hx-get={ fmt.Sprintf("/courses/%s/assignments/newAssignment", course.Name) }
            hx-swap="outerHTML"
            href="#">New Assignment</a></p>
    </div>
}

templ (w *Web) assignmentDetails(assignment classroom.AssignmentSpec, executions map[string]string) {
    <h1><a href={ templ.URL(fmt.Sprintf("/courses/%s", assignment.Course)) }>{ assignment.Course }</a>: { assignment.Name }</h1>
    <p>Path: { assignment.Path }</p>
    <p>Course: { assignment.Course }</p>
    <p>Extras source: { assignment.ExtrasSrc }</p>
    <p>Extras dest:{ assignment.ExtrasDst }</p>
    <p>Grade expression: <pre>{ assignment.Expr }</pre></p>
    <div>
        <button
            hx-post={ fmt.Sprintf("/courses/"+assignment.Course+"/assignments/"+assignment.Name+"/run") }>Run</button>
        <button class="secondary"
            style="background-color: red"
            hx-confirm={ fmt.Sprintf("Are you sure you want to delete %s?", assignment.Name) }
            hx-delete={ fmt.Sprintf("/courses/%s/assignments/%s", assignment.Course, assignment.Name) }>Delete</button>
    </div>

    <div>
        @w.listExecutions(assignment.Course, assignment.Name, executions)
    </div>

    <div id="resultView"></div>
}

templ (w *Web) viewResult(result string) {
    <div style="margin: 1em;" id="resultView">
        <div>
            <pre>{ result }</pre>
            <button hx-get="/" hx-swap="delete" hx-target="#resultView div">Close</button>
        </div>
    </div>
}

templ (w *Web) listExecutions(course, assignment string, executions map[string]string) {
    <div
        style="margin-top: 1em"
        hx-get={ fmt.Sprintf("/courses/%s/assignments/%s/status", course, assignment) }
        hx-target="this"
        hx-swap="outerHTML" hx-trigger="load delay:5s">
    if len(executions) > 0 {
        <div>
        <h2>Executions</h2>
        // TODO: UUID is a weird thing to use for this.. executions start jumping around and getting unordered.
        for id, status := range executions {
            if status == STATUS_RUNNING {
                { id }: Running
            } else {
                <a href={ templ.URL(fmt.Sprintf("/courses/%s/assignments/%s/download/%s",
                    course, assignment, id)) }>{ id }</a>: Complete (<a href=""
                        hx-get={ fmt.Sprintf("/courses/%s/assignments/%s/view/%s",
                            course, assignment, id) }
                            hx-target="#resultView">view</a>)
            }
            <br/>
        }
        </div>
    }
    </div>
}

templ (w *Web) newAssignmentForm(courseName string) {
    <form
        hx-post={ fmt.Sprintf("/courses/%s/assignments", courseName) }
        hx-target="#assignmentList">
        <p>Name: <input type="text" name="name" required /></p>
        <p>Type: <select name="type" required>
            <option selected disabled value="">Select a target language</option>
            <option value="java">Java</option>
            <option value="net">.NET</option>
            <option value="go">Go</option>
        </select></p>
        <p>Path: <input type="text" name="path" placeholder="This will be filled by the gh repo clone" /></p>
        <p>Extras source: <input type="text" name="extrasSrc" placeholder="Disk path to your extra tests" /></p>
        <p>Extras dest: <input type="text" name="extrasDst" value="/" /></p>
        <p>Grade expression: <input type="text" name="expr" value={ classroom.DEFAULT_EXPR } /></p>
        <div>
            <button>Save</button>
        </div>
    </form>
}